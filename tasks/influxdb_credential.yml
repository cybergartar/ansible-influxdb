---
# TODO: Set fact to check user existed before run this task

- block: # Add users without auth
  - name: Add influxdb user admin
    command: >
      influx -execute
      "CREATE USER {{ item.value.username }} WITH PASSWORD '{{ item.value.password }}' WITH ALL PRIVILEGES"
    when:
      - not influxdb_config.http.auth_enabled | bool
      - item.key.split(':')[0] == 'admin'
      # - item.value.database is not defined or item.value.database | length == 0
    with_dict: >
      {{ influxdb_credentials_admin }}

  - name: Add influxdb user non-admin
    command: >
      influx -execute
      "CREATE USER {{ item.value.username }} WITH PASSWORD '{{ item.value.password }}'"
    when:
      - not influxdb_config.http.auth_enabled | bool
      - item.key.split(':')[0] == 'user'
      # - item.value.database is not defined or item.value.database | length == 0
    with_dict: >
      {{ influxdb_credentials_user }}


- block: # Grant privileges without auth
  - name: Grant privileges to exsiting user
    command: >
      influx -execute
      "GRANT {{ item.1.split('.')[0] }} ON {{ item.1.split('.')[1] }} TO {{ item.0.username }}"
    when:
      - not influxdb_config.http.auth_enabled | bool
      - item.1 is defined or item.1 | length > 0
    with_subelements:
      - "{{ influxdb_credentials_user | combine(influxdb_credentials_admin|default({}), recursive=True) }}"
      - database
      - skip_missing: yes
